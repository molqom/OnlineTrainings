Final Task. Web Project

•Приложение реализовать применяя технологии Servlet и JSP
•Архитектура приложения должна соответствовать шаблонам Layered architecture и MVC.
Controller может быть только двух видов: контроллер роли или контроллер приложения.

Требования к БД
•Информация о предметной области должна хранится в БД:
•Если данные в базе хранятся на кириллице, рекомендуется применять кодировку utf-8
•Технология доступа к БД только JDBC
•Для работы с БД в приложении должен быть реализован потокобезопасный пул соединений,
использовать synchronized и volatile запрещено.
•Дри проектировании БД рекомендуется использовать не более 6-8 таблиц
•Работу с данными в приложении осуществлять посредством шаблона DAO.

Базовые требования к приложению
•Интерфейс приложения должен быть локализован; выбор из языков: EN|BE|RU etc. +/-
•Приложение должно корректно обрабатывать возникающие исключительные
ситуации, в том числе вести их логи. В качестве логгера использовать Log4J2/SLF4J -
•Классы и другие сущности приложения должны быть грамотно структурированы по
пакетам и иметь отражающую их функциональность название. +
•При реализации бизнес-логики приложения следует при необходимости использовать
шаблоны проектирования (например, шаблоны GoF: Factory Method, Command, Builder,
Strategy, State, Observer, Singleton, Proxy etc). +
•Для хранения пользовательской информации между запросами использовать сессию. +
•Для перехвата и корректировки объектов запроса (request) и ответа (response)
применить фильтры. -
•Разрешается использовать технологии AspectJ и Web-services.
•При реализации страниц JSP следует использовать теги библиотеки JSTL, использовать
скриплеты запрещено. +
•При реализации пользовательского интерфейса разрешается использовать любые
технологии front-end разработки (JavaScript, AJAX).
•Реализовать защиту от повторного выполнения запроса нажатием F5. +
•Реализовать собственные теги. -
•Просмотр “длинных списков” желательно организовывать в постраничном режиме. +
•Валидацию входных данных производить на клиенте и на сервере. +/-
•Документацию к проекту необходимо оформить согласно требованиям javadoc. -
•Оформление кода должно соответствовать Java Code Convention. +
•При развертывании приложения разрешается использовать технологию Maven. +
•Приложение должно содержать тесты TestNG, JUnit, Mockito или EasyMock. -
•Приложение должно быть размещено на Bitbucket.com +/-

Минимальные требования к функциональности приложения
•Авторизация (sign in) и выход (sign out) в/из системы. +
•Регистрация пользователя и/или добавление артефакта предметной области системы. +
•Просмотр информации (например: просмотр всех ставок тотализатора, статистики заказов,
счетов и т.д.) +
•Удаление информации (например: отмена заказа, удаление сущности и т.д.) +
•Добавление и модификация информации (например: создать и отредактировать товар,
создать и отредактировать заказ и т.д.) +/-
•Во всех проектах где присутствуют финансовые отношения возможно использование
оплаты в кредит (not fo me)

OnlineTraining.
Существует перечень Курсов, за каждым из которых закреплен Преподаватель.
Студент записывается на один или несколько Курсов, выполняет задания.
Преподаватель выставляет oценки за задания Студенту и добавляет отзыв.
Администратор управляет Курсами и Преподавателями.

tables:
users (user_id, user_name, name, surname, user_pswd, role_id, image_url);
roles (role_id, role_name);
courses (course_id, course_name, user_id(teacher_id));
subscriptions(id, user_id, course_id, grade, feedback);

pages:
1. main page (admin, teacher, user)
2. courses (user, admin)
3. teachers (teacher) - list of your courses -> list student/mark/comment
//todo 25.12
допилить всё что есть. навести красоту и порядок!!!!!
1. составить план, что именно допилить и подправить по пунктам
2. записать этот план сюда
3. выполнить этот план по пунктам

1. adaptive
2. login page
3. register page
4. main page
5. admin page

1. implements delete subscription +
2. implements not subscribe at same course +/-
3. implements forward from courses to students (for teacher)

что такое дто?
делит он каскад
не удалять а менять статус
3. registration command

